Index: app/src/main/java/com/example/weatherapp/ui/components/BottomSheetButtonOptions.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.weatherapp.ui.components\n\nimport androidx.compose.foundation.BorderStroke\nimport androidx.compose.foundation.background\nimport androidx.compose.foundation.layout.Arrangement\nimport androidx.compose.foundation.layout.Column\nimport androidx.compose.foundation.layout.fillMaxWidth\nimport androidx.compose.foundation.layout.padding\nimport androidx.compose.foundation.layout.widthIn\nimport androidx.compose.foundation.lazy.LazyRow\nimport androidx.compose.foundation.lazy.itemsIndexed\nimport androidx.compose.foundation.lazy.rememberLazyListState\nimport androidx.compose.foundation.rememberScrollState\nimport androidx.compose.foundation.verticalScroll\nimport androidx.compose.material3.Button\nimport androidx.compose.material3.ButtonDefaults\nimport androidx.compose.material3.Divider\nimport androidx.compose.material3.MaterialTheme\nimport androidx.compose.material3.Text\nimport androidx.compose.runtime.Composable\nimport androidx.compose.runtime.getValue\nimport androidx.compose.runtime.mutableStateOf\nimport androidx.compose.runtime.remember\nimport androidx.compose.runtime.rememberCoroutineScope\nimport androidx.compose.runtime.setValue\nimport androidx.compose.ui.Modifier\nimport androidx.compose.ui.graphics.Color\nimport androidx.compose.ui.res.dimensionResource\nimport androidx.compose.ui.text.style.TextAlign\nimport androidx.compose.ui.unit.dp\nimport com.example.weatherapp.R\nimport com.example.weatherapp.model.AirPollutionForecastResult\nimport com.example.weatherapp.model.HourlyResult\nimport com.example.weatherapp.model.WeekResult\nimport com.example.weatherapp.ui.screen.HomeScreenCurrentWeather\nimport com.example.weatherapp.ui.theme.LightColorPalette\nimport com.example.weatherapp.ui.theme.Shapes\nimport com.example.weatherapp.ui.theme.lineColor\nimport kotlinx.coroutines.launch\n\n@Composable\nfun BSheetOptions(\n    weeklyResult: WeekResult,\n    hourlyResult: HourlyResult,\n    airPollutionForecastResult: AirPollutionForecastResult,\n) {\n    var optionButtonsChosen by remember { mutableStateOf(0) }\n\n    Column(\n        verticalArrangement = Arrangement.Center,\n        modifier = Modifier\n            .fillMaxWidth()\n            .background(color = LightColorPalette.surfaceVariant)\n            .verticalScroll(rememberScrollState())\n    ) {\n        val lazyListState = rememberLazyListState()\n        val coroutineScope = rememberCoroutineScope()\n        val optionButtons = listOf(\"Current Weather\", \"Hourly Forecast\", \"Weekly Forecast\")\n        LazyRow(\n            state = lazyListState, horizontalArrangement = Arrangement.spacedBy(\n                dimensionResource(id = R.dimen.padding_extra_small)\n            ), userScrollEnabled = true, modifier = Modifier\n                .fillMaxWidth()\n                .padding(\n                    start = dimensionResource(id = R.dimen.padding_small),\n                    bottom = dimensionResource(id = R.dimen.padding_small)\n                )\n        ) {\n            itemsIndexed(optionButtons) { index, item ->\n                val isOptionButtonsChosen = optionButtonsChosen == index\n                Button(\n                    onClick = {\n                        optionButtonsChosen = index\n                        coroutineScope.launch {\n                            when (index) {\n                                0 -> lazyListState.scrollToItem(0) // Scroll to the start for the first button\n                                optionButtons.lastIndex -> lazyListState.scrollToItem(index) // Scroll to the end for the last button\n                            }\n                        }\n                    },\n                    shape = Shapes.medium,\n                    colors = ButtonDefaults.buttonColors(\n                        containerColor = if (isOptionButtonsChosen) LightColorPalette.secondary else Color.Transparent,\n                    ),\n                    modifier = Modifier\n                        .padding(0.dp)\n                        .widthIn(max = 150.dp),\n                    border = BorderStroke(\n                        width = 1.dp, color = LightColorPalette.secondary\n                    )\n                ) {\n                    Text(\n                        text = optionButtons[index],\n                        color = if (isOptionButtonsChosen) LightColorPalette.onSecondary else LightColorPalette.onSurfaceVariant,\n                        style = MaterialTheme.typography.titleSmall,\n                        textAlign = TextAlign.Center,\n                        modifier = Modifier.padding(0.dp)\n                    )\n                }\n            }\n        }\n\n\n        Divider(\n            color = lineColor,\n            thickness = 1.dp,\n            modifier = Modifier.padding(bottom = dimensionResource(id = R.dimen.padding_small))\n        )\n\n        if (optionButtonsChosen == 0) {\n            HomeScreenCurrentWeather()\n        } else if (optionButtonsChosen == 1) {\n            TabList(\n                resultData = hourlyResult, airPollutionForecastResult = airPollutionForecastResult\n            )\n        }else if (optionButtonsChosen == 2){\n            TabList(resultData = weeklyResult)\n        }\n    }\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/weatherapp/ui/components/BottomSheetButtonOptions.kt b/app/src/main/java/com/example/weatherapp/ui/components/BottomSheetButtonOptions.kt
--- a/app/src/main/java/com/example/weatherapp/ui/components/BottomSheetButtonOptions.kt	(revision bbeb780ed9761457d197762d701d98355467817e)
+++ b/app/src/main/java/com/example/weatherapp/ui/components/BottomSheetButtonOptions.kt	(date 1703858126231)
@@ -32,7 +32,6 @@
 import com.example.weatherapp.model.AirPollutionForecastResult
 import com.example.weatherapp.model.HourlyResult
 import com.example.weatherapp.model.WeekResult
-import com.example.weatherapp.ui.screen.HomeScreenCurrentWeather
 import com.example.weatherapp.ui.theme.LightColorPalette
 import com.example.weatherapp.ui.theme.Shapes
 import com.example.weatherapp.ui.theme.lineColor
@@ -107,14 +106,12 @@
             modifier = Modifier.padding(bottom = dimensionResource(id = R.dimen.padding_small))
         )
 
-        if (optionButtonsChosen == 0) {
-            HomeScreenCurrentWeather()
+        if (optionButtonsChosen == 2) {
+            TabList(resultData = weeklyResult)
         } else if (optionButtonsChosen == 1) {
             TabList(
                 resultData = hourlyResult, airPollutionForecastResult = airPollutionForecastResult
             )
-        }else if (optionButtonsChosen == 2){
-            TabList(resultData = weeklyResult)
         }
     }
 }
\ No newline at end of file
Index: app/src/main/java/com/example/weatherapp/ui/screen/HomeScreenCurrentWeather.kt
===================================================================
diff --git a/app/src/main/java/com/example/weatherapp/ui/screen/HomeScreenCurrentWeather.kt b/app/src/main/java/com/example/weatherapp/ui/screen/HomeScreenCurrentWeather.kt
deleted file mode 100644
--- a/app/src/main/java/com/example/weatherapp/ui/screen/HomeScreenCurrentWeather.kt	(revision bbeb780ed9761457d197762d701d98355467817e)
+++ /dev/null	(revision bbeb780ed9761457d197762d701d98355467817e)
@@ -1,8 +0,0 @@
-package com.example.weatherapp.ui.screen
-
-import androidx.compose.runtime.Composable
-
-@Composable
-fun HomeScreenCurrentWeather(){
-
-}
\ No newline at end of file
